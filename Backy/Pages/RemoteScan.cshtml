@page
@model Backy.Pages.RemoteScanModel
@{
    ViewData["Title"] = "Remote Scan";
}

<h1>@ViewData["Title"]</h1>

<!-- Add New Storage Source Button -->
<button class="btn btn-success" onclick="openAddModal()">Add New Storage Source</button>

<!-- Storage Source Cards -->
<div class="row">
    @foreach (var source in Model.StorageSources)
    {
        <div class="col-12">
            @await Html.PartialAsync("_StorageSourceCard", source)
        </div>
    }
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="storageModal" tabindex="-1" role="dialog" aria-labelledby="storageModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" id="storageForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="storageModalLabel">Add/Edit Storage Source</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @if (!ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <ul>
                                @foreach (var modelState in ModelState.Values)
                                {
                                    foreach (var error in modelState.Errors)
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                }
                            </ul>
                        </div>
                    }

                    <input type="hidden" asp-for="RemoteStorage.Id" id="storageId" />

                    <div class="form-group">
                        <label>Name</label>
                        <input asp-for="RemoteStorage.Name" class="form-control" id="storageName" required />
                        <span asp-validation-for="RemoteStorage.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Host</label>
                        <input asp-for="RemoteStorage.Host" class="form-control" id="storageHost" required />
                        <span asp-validation-for="RemoteStorage.Host" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Port</label>
                        <input asp-for="RemoteStorage.Port" class="form-control" id="storagePort" required />
                        <span asp-validation-for="RemoteStorage.Port" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Username</label>
                        <input asp-for="RemoteStorage.Username" class="form-control" id="storageUsername" required />
                        <span asp-validation-for="RemoteStorage.Username" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Authentication Method</label>
                        <select asp-for="RemoteStorage.AuthenticationMethod" class="form-control" id="authMethod"
                            onchange="toggleAuthFields()" required>
                            <option value="Password">Password</option>
                            <option value="SSH Key">SSH Key</option>
                        </select>
                        <span asp-validation-for="RemoteStorage.AuthenticationMethod" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="passwordField">
                        <label>Password</label>
                        <input asp-for="RemoteStorage.Password" class="form-control" id="storagePassword"
                            type="password" />
                        <span asp-validation-for="RemoteStorage.Password" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="sshKeyField" style="display:none;">
                        <label>SSH Key</label>
                        <textarea asp-for="RemoteStorage.SSHKey" class="form-control" id="storageSSHKey"></textarea>
                        <span asp-validation-for="RemoteStorage.SSHKey" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>Remote Path</label>
                        <input asp-for="RemoteStorage.RemotePath" class="form-control" id="storageRemotePath"
                            required />
                        <span asp-validation-for="RemoteStorage.RemotePath" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                        onclick="closeModal()">Close</button>
                    <button type="submit" class="btn btn-primary" id="modalSubmitButton">Save</button>
                </div>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>
</div>

<!-- File Explorer Modal -->
<div class="modal fade" id="fileExplorerModal" tabindex="-1" role="dialog" aria-labelledby="fileExplorerModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="max-width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">File Explorer</h5>
                <div class="input-group" style="width: 50%; position: relative;">
                    <input type="text" class="form-control" placeholder="Search..." id="searchInput">
                    <!-- Search button with icon -->
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button"
                            onclick="searchFiles($('#searchInput').val())">
                            <img src="/icons/search.svg" alt="Search" class="search-icon">
                        </button>
                    </div>
                    <!-- Suggestions dropdown -->
                    <div id="searchSuggestions" class="dropdown-menu" style="width: 100%;"></div>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                    onclick="closeFileExplorer()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y: auto; max-height: 80vh;">
                <div id="fileExplorerContent">
                    <!-- File explorer content will be rendered here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Scripts for Add/Edit Modal
        function openAddModal() {
            clearModalFields();
            $('#storageModalLabel').text('Add New Storage Source');
            $('#modalSubmitButton').text('Add Storage');
            $('#storageForm').attr('action', '?handler=Add');
            $('#storageModal').modal('show');
        }

        function openEditModal(id) {
            clearModalFields();
            $.ajax({
                url: '?handler=GetStorage',
                type: 'GET',
                data: { id: id },
                success: function (data) {
                    if (data.success === false) {
                        alert('Storage not found.');
                        return;
                    }

                    $('#storageModalLabel').text('Edit Storage Source');
                    $('#modalSubmitButton').text('Save Changes');
                    $('#storageForm').attr('action', '?handler=Edit');
                    $('#storageId').val(data.id);
                    $('#storageName').val(data.name);
                    $('#storageHost').val(data.host);
                    $('#storagePort').val(data.port);
                    $('#storageUsername').val(data.username);
                    $('#authMethod').val(data.authenticationMethod);
                    $('#storageRemotePath').val(data.remotePath);
                    toggleAuthFields();
                    if (data.authenticationMethod === 'Password') {
                        $('#storagePassword').val(''); // Clear password field
                        $('#storageSSHKey').val(''); // Clear SSH Key field
                    } else {
                        $('#storageSSHKey').val(''); // Clear SSH Key field
                        $('#storagePassword').val(''); // Clear password field
                    }
                    $('#storageModal').modal('show');
                },
                error: function () {
                    alert('Error fetching storage details.');
                }
            });
        }

        function closeModal() {
            $('#storageModal').modal('hide');
        }

        function clearModalFields() {
            $('#storageForm')[0].reset();
            $('#storageId').val('');
            $('#storagePassword').val('');
            $('#storageSSHKey').val('');
            $('.alert-danger').remove();
            toggleAuthFields();
        }

        function toggleAuthFields() {
            var method = $('#authMethod').val();
            if (method === 'Password') {
                $('#passwordField').show();
                $('#sshKeyField').hide();
                $('#storagePassword').prop('required', true);
                $('#storageSSHKey').prop('required', false);
            } else if (method === 'SSH Key') {
                $('#passwordField').hide();
                $('#sshKeyField').show();
                $('#storagePassword').prop('required', false);
                $('#storageSSHKey').prop('required', true);
            } else {
                $('#passwordField').hide();
                $('#sshKeyField').hide();
                $('#storagePassword').prop('required', false);
                $('#storageSSHKey').prop('required', false);
            }
        }

        // Ensure the correct fields are shown/hidden on page load
        $(document).ready(function () {
            toggleAuthFields();

            // Open the modal if there are ModelState errors
            if ($('.alert-danger').length > 0) {
                $('#storageModal').modal('show');
            }

            // Attach the toggle function to the AuthenticationMethod dropdown
            $('#authMethod').change(toggleAuthFields);
        });

        // Scripts for File Explorer
        let storageId = null;
        let expandedPaths = new Set();

        function openFileExplorer(selectedStorageId) {
            storageId = selectedStorageId;
            fetchFileExplorerData(storageId, null);
            $('#fileExplorerModal').modal('show');
        }

        function closeFileExplorer() {
            $('#fileExplorerModal').modal('hide');
        }

        // Include the rest of the File Explorer scripts here
        // Adapted from your existing FileIndex.cshtml
    </script>
}

<link rel="stylesheet" href="/css/Drive.css">
<link rel="stylesheet" href="/css/FileIndex.css">
