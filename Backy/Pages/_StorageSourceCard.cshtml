@model Backy.Pages.RemoteScanModel.StorageSourceViewModel

@{
    var storage = Model.RemoteScan;
    var usedPercentage = Model.BackupPercentage;
    var headerBackgroundColor = storage.Status == "Online" ? "#90ee90" : "#d3d3d3"; // Green if online, gray if offline
}

<div class="card storage-card mb-3">
    <!-- Card Header -->
    <div class="card-header d-flex justify-content-between align-items-center"
        style="background-color:@headerBackgroundColor; color:black;">
        <div class="d-flex align-items-center">
            <!-- Expand/Collapse button -->
            <button class="btn btn-link p-0 me-2 chevron-button" type="button" data-bs-toggle="collapse"
                data-bs-target="#storageDetails-@storage.Id" aria-expanded="false"
                aria-controls="storageDetails-@storage.Id">
                <img src="/icons/chevron-down.svg" alt="Expand Details" class="chevron-icon" style="height: 24px;">
            </button>
            <!-- Storage Icon -->
            <img src="/icons/hdd-network.svg" alt="Storage Icon" style="height: 24px; margin-right: 8px;" />
            <span>@storage.Name</span>
        </div>
        <div>
            <!-- Progress Bar -->
            <div>
                <span id="backupPercentage-@storage.Id">@Model.BackupPercentage% Backup</span>
            </div>
            <div class="progress progress-with-border" style="height: 4px">
                <div class="progress-bar" id="progressBar-@storage.Id" role="progressbar"
                    style="width: @usedPercentage%" aria-valuenow="@usedPercentage" aria-valuemin="0"
                    aria-valuemax="100"></div>
            </div>
        </div>
        <!-- Buttons -->
        <div class="btn-group">
            <!-- Enable/Disable Button -->
            @if (storage.IsEnabled)
            {
                <button type="button" class="btn btn-transparent" onclick="toggleEnable('@storage.Id')">
                    <img src="/icons/pause-circle.svg" alt="Disable" style="height: 24px;" data-bs-toggle="tooltip"
                        title="Disable">
                </button>
            }
            else
            {
                <button type="button" class="btn btn-transparent" onclick="toggleEnable('@storage.Id')">
                    <img src="/icons/play.svg" alt="Enable" style="height: 24px;" data-bs-toggle="tooltip" title="Enable">
                </button>
            }
            <!-- Start Indexing -->
            <button type="button" class="btn btn-transparent" onclick="startIndexing('@storage.Id')"
                id="startIndexingButton-@storage.Id" @(storage.IsIndexing ? "disabled" : "")>
                <img src="/icons/arrow-clockwise.svg" alt="Start Indexing" id="startIndexingIcon-@storage.Id"
                    style="height: 24px;" data-bs-toggle="tooltip" title="Start Indexing"
                    class="@(storage.IsIndexing ? "rotating" : "")">
            </button>
            <!-- Schedule Index -->
            <button type="button" class="btn btn-transparent" onclick="openScheduleModal('@storage.Id')">
                <img src="/icons/calendar-week.svg" alt="Schedule Index" style="height: 24px;" data-bs-toggle="tooltip"
                    title="Schedule Index">
            </button>
            <!-- Open File Explorer -->
            <button type="button" class="btn btn-transparent" onclick="openFileExplorer('@storage.Id')">
                <img src="/icons/layout-text-window-reverse.svg" alt="Open File Explorer" style="height: 24px;"
                    data-bs-toggle="tooltip" title="Open File Explorer">
            </button>
            <!-- Edit -->
            <button type="button" class="btn btn-transparent" onclick="openEditModal('@storage.Id')">
                <img src="/icons/pencil-square.svg" alt="Edit" style="height: 24px;" data-bs-toggle="tooltip"
                    title="Edit">
            </button>
            <!-- Delete -->
            <form method="post" asp-page-handler="Delete" asp-route-id="@storage.Id" style="display:inline;">
                <button type="submit" class="btn btn-transparent-warning"
                    onclick="return confirm('Are you sure you want to delete this storage?');">
                    <img src="/icons/trash.svg" alt="Delete" style="height: 24px;" data-bs-toggle="tooltip"
                        title="Delete">
                </button>
            </form>
        </div>
    </div>

    <!-- Collapsible Details -->
    <div class="collapse" id="storageDetails-@storage.Id">
        <div class="card-body">
            <h5>File and Backup Info</h5>
            <div class="table-responsive">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <th>Total Files</th>
                            <td id="totalFiles-@storage.Id">@Model.TotalFiles</td>
                        </tr>
                        <tr>
                            <th>Files Backed Up</th>
                            <td id="backupCount-@storage.Id">@Model.BackupCount</td>
                        </tr>
                        <tr>
                            <th>Total Size</th>
                            <td id="totalSize-@storage.Id">@formatBytes(Model.TotalSize)</td>
                        </tr>
                        <tr>
                            <th>Backed Up Size</th>
                            <td id="totalBackupSize-@storage.Id">@formatBytes(Model.TotalBackupSize)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <h5>Connection Info</h5>
            <div class="table-responsive">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <th>Hostname/IP</th>
                            <td>@storage.Host</td>
                        </tr>
                        <tr>
                            <th>Port</th>
                            <td>@storage.Port</td>
                        </tr>
                        <tr>
                            <th>Status</th>
                            <td>@storage.Status</td>
                        </tr>
                        <tr>
                            <th>Last Checked</th>
                            <td>@storage.LastChecked?.ToString("g")</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    public string formatBytes(long bytes)
    {
        if (bytes == 0)
            return "0 B";

        var sizes = new[] { "B", "KB", "MB", "GB", "TB" };
        int order = (int)Math.Floor(Math.Log(bytes, 1024));
        double adjustedSize = bytes / Math.Pow(1024, order);

        return $"{adjustedSize:0.##} {sizes[order]}";
    }
}
