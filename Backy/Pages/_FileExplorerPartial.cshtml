@model Backy.Models.FileExplorerModel

<div id="fileExplorerContent">
    <h5>Path: @Model.CurrentPath</h5>
    <div class="row">
        <!-- Left Column: Directory Navigation -->
        <div class="col-md-3">
            <ul id="directoryTree" class="list-group">
                <!-- Directory tree will be populated here by JavaScript -->
            </ul>
        </div>

        <!-- Right Column: Files and Breadcrumb -->
        <div class="col-md-9">
            <!-- Breadcrumb Navigation -->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb align-items-center">
                    <li class="breadcrumb-item">
                        <a href="javascript:void(0);" onclick="navigateTo('@Model.remotePath')">
                            <i class="fa fa-home"></i> Root
                        </a>
                    </li>
                    @if (!string.IsNullOrEmpty(Model.navPath))
                    {
                        var segments = Model.navPath.Split('/', StringSplitOptions.RemoveEmptyEntries);
                        string cumulativePath = Model.remotePath;
                        foreach (var segment in segments)
                        {
                            cumulativePath += segment + "/";
                            if (segment != segments.Last())
                            {
                                <li class="breadcrumb-item">
                                    <a href="javascript:void(0);" onclick="navigateTo('@cumulativePath')">
                                        @segment
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="breadcrumb-item active" aria-current="page">
                                    @segment
                                </li>
                            }
                        }
                    }
                </ol>
            </nav>

            <!-- Files Table -->
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Size</th>
                        <th>Backup</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dir in Model.Directories)
                    {
                        <tr>
                            <td>
                                <i class="fa fa-folder"></i>
                                <a href="javascript:void(0);" onclick="navigateTo('@dir.FullPath')">
                                    @dir.Name
                                </a>
                            </td>
                            <td>Directory</td>
                            <td>N/A</td>
                            <td>N/A</td>
                        </tr>
                    }

                    @foreach (var file in Model.Files)
                    {
                        <tr>
                            <td>
                                <i class="fa fa-file"></i> @file.FileName
                            </td>
                            <td>File</td>
                            <td data-size="@file.Size"></td> <!-- Use data attribute -->
                            <td>@(file.BackupExists ? "Backed Up" : "Pending")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function navigateTo(path) {
        $.ajax({
            url: '@Url.Page("RemoteScan", "GetFileExplorer")',
            data: { storageId: '@Model.StorageId', path: path },
            method: 'GET',
            success: function (data) {
                if (data.success) {
                    renderFileExplorer(data, ''); // No file to highlight initially
                } else {
                    alert('Error: ' + data.message);
                }
            },
            error: function () {
                alert('Error loading directory.');
            }
        });
    }
</script>