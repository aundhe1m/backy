@page
@model Backy.Pages.DriveModel
@{
    ViewData["Title"] = "Drive Catalog";
}

<h1>@ViewData["Title"]</h1>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search drives..." id="driveSearchInput">
    <span class="input-group-text">
        <img src="/icons/search.svg" alt="Search Icon" class="search-icon">
    </span>
</div>

<!-- New drives section -->
@if (Model.NewDrives.Any())
{
    <div class="alert alert-primary d-flex align-items-center" role="alert">
    <img src="/icons/info-circle.svg" alt="Info Icon" style="height: 24px; margin-right: 8px;" />
    <div>New drives detected</div>
</div>
    <h3>Drives</h3>
    @foreach (var Drive in Model.NewDrives)
    {
        @await Html.PartialAsync("_NewDriveCard", Drive)
    }
    <hr />
}

<!-- Pool groups section -->
@if (Model.PoolGroups.Any())
{
    <h3>Backup Pools</h3>

    <div class="row">
    @foreach (var group in Model.PoolGroups)
        {
            <div class="col-12">
                <div class="card mb-4" data-pool-group-guid="@group.PoolGroupGuid">
                    <!-- Pool Group Header -->
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <!-- Expand/Collapse button -->
                            <button class="btn btn-link p-0 me-2 chevron-button" type="button" data-bs-toggle="collapse"
                                data-bs-target="#poolDetails-@group.PoolGroupGuid" aria-expanded="false"
                                aria-controls="poolDetails-@group.PoolGroupGuid">
                                <img src="/icons/chevron-down.svg" alt="Expand Details" class="chevron-icon"
                                    style="height: 24px;">
                            </button>
                            <!-- Pool Icon -->
                            <img src="/icons/hdd-rack.svg" alt="Pool Group Icon" style="height: 24px; margin-right: 8px;" />
                            <h5 class="mb-0">@group.GroupLabel</h5>
                        </div>
                        <!-- Progress Bar -->
                        <div>
                            <span>@String.Format("{0:F2} GB", group.Used / 1024.0 / 1024.0 / 1024.0)</span> /
                            <span>@String.Format("{0:F2} GB", group.Size / 1024.0 / 1024.0 / 1024.0)</span>
                            @{
                                // Directly use UsePercent
                                var usedPercentage = group.UsePercent.TrimEnd('%');
                            }
                            <div class="progress progress-with-border" style="height: 4px">
                                <div class="progress-bar" role="progressbar" style="width: @usedPercentage%"
                                    aria-valuenow="@usedPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                        <!-- Existing buttons -->
                        <div class="btn-group">
                            <!-- Eject/Mount Button -->
                            @if (group.PoolEnabled)
                            {
                                <button type="button" class="btn btn-transparent eject-pool-button"
                                    data-pool-group-guid="@group.PoolGroupGuid" data-bs-toggle="tooltip" title="Unmount Pool">
                                    <img src="/icons/eject.svg" alt="Unmount Pool" style="height: 24px;">
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-transparent mount-pool-button"
                                    data-pool-group-guid="@group.PoolGroupGuid" data-bs-toggle="tooltip" title="Mount Pool">
                                    <img src="/icons/play.svg" alt="Mount Pool" style="height: 24px;">
                                </button>
                            }
                            <!-- Inspect Button -->
                            <button type="button" class="btn btn-transparent inspect-pool-button"
                                data-pool-group-guid="@group.PoolGroupGuid" data-bs-toggle="tooltip" title="Inspect Pool">
                                <img src="/icons/eye.svg" alt="Inspect Pool" style="height: 24px;">
                            </button>
                            <!-- Options Dropdown -->
                            <span data-bs-toggle="tooltip" title="Options" alt="Options">
                                <button type="button" class="btn btn-transparent" data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                    <img src="/icons/gear.svg" alt="Options" style="height: 24px;">
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <button class="dropdown-item" data-bs-toggle="modal"
                                            data-bs-target="#renamePoolModal-@group.PoolGroupGuid">Rename</button>
                                    </li>
                                    <li>
                                        <button type="button" class="dropdown-item remove-pool-group-button"
                                            data-pool-group-guid="@group.PoolGroupGuid">
                                            Remove
                                        </button>
                                    </li>
                                </ul>
                            </span>
                        </div>
                    </div>
                    <!-- Pool Drives -->
                    <div class="collapse" id="poolDetails-@group.PoolGroupGuid">
                        <div class="card-body">
                            @foreach (var Drive in group.Drives)
                            {
                                @await Html.PartialAsync("_PoolGroupDriveCard", Drive)
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Rename Pool Modal -->
            <div class="modal fade" id="renamePoolModal-@group.PoolGroupGuid" tabindex="-1"
                aria-labelledby="renamePoolModalLabel-@group.PoolGroupGuid" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <form class="rename-pool-form" data-pool-group-guid="@group.PoolGroupGuid">
                            <div class="modal-header">
                                <h5 class="modal-title" id="renamePoolModalLabel-@group.PoolGroupGuid">Rename Backup Pool</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Pool Label -->
                                <div class="mb-3">
                                    <label for="newPoolGroupLabel-@group.PoolGroupGuid" class="form-label">New Pool
                                        Label</label>
                                    <input type="text" class="form-control" id="newPoolGroupLabel-@group.PoolGroupGuid"
                                        name="newPoolLabel" value="@group.GroupLabel" required />
                                </div>
                                <!-- Drives Table -->
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Vendor</th>
                                                <th>Model</th>
                                                <th>Serial</th>
                                                <th>Current Label</th>
                                                <th>New Label</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < group.Drives.Count; i++)
                                            {
                                                var drive = group.Drives[i];
                                                <tr>
                                                    <td>@(i + 1)</td>
                                                    <td>@drive.Vendor</td>
                                                    <td>@drive.Model</td>
                                                    <td>@drive.Serial</td>
                                                    <td>@(string.IsNullOrEmpty(drive.Label) ? "No Label" : drive.Label)</td>
                                                    <td>
                                                        <input type="text" class="form-control drive-new-label-input"
                                                            data-drive-id="@drive.Id" placeholder="Optional" value="@drive.Label" />
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Rename Pool</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}

<!-- Create Pool Modal -->
<div class="modal fade" id="createPoolModal" tabindex="-1" aria-labelledby="createPoolModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="createPoolForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="createPoolModalLabel">Create Backup Pool</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Pool Creation Form -->
                    <div id="poolCreationForm">
                        <div class="mb-3">
                            <label for="poolLabelInput" class="form-label">Pool Label</label>
                            <input type="text" class="form-control" id="poolLabelInput" name="PoolLabel"
                                placeholder="Enter pool label" required>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-striped" id="selectedDrivesTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Label</th>
                                        <th>Vendor</th>
                                        <th>Model</th>
                                        <th>Serial</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="6" class="text-center">No drives selected</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- Command Outputs -->
                    <div id="commandOutputs" style="display: none;">
                        <pre class="command-output"></pre>
                    </div>
                </div>
                <div class="modal-footer">
                    <!-- Buttons will be dynamically updated -->
                    <button type="submit" class="btn btn-primary">Create Pool</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                        id="cancelCreatePoolButton">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast for Drive Selection -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="driveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="false">
        <div class="toast-header">
            <img src="/icons/info-circle.svg" class="rounded me-2" alt="Info" style="height: 20px;">
            <strong class="me-auto">Drive Selection</strong>
        </div>
        <div class="toast-body">
            Drives selected for pool creation.
            <div class="mt-2 pt-2 border-top">
                <button type="button" class="btn btn-primary btn-sm" id="createPoolToastButton">Create
                    Pool</button>
                <button type="button" class="btn btn-secondary btn-sm" id="abortSelectionButton">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Remove Pool Group Confirmation Modal -->
<div class="modal fade" id="removePoolGroupModal" tabindex="-1" aria-labelledby="removePoolGroupModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Remove Pool Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove this pool group? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRemovePoolGroupButton">Remove</button>
            </div>
        </div>
    </div>
</div>

<!-- Process List Modal -->
<div class="modal fade" id="processListModal" tabindex="-1" aria-labelledby="processListModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Processes Using the Mount Point</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>The following processes are preventing the unmount operation:</p>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>PID</th>
                            <th>Command</th>
                            <th>User</th>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody id="processListTableBody">
                        <!-- Processes will be populated here dynamically -->
                    </tbody>
                </table>
                <p>Do you want to kill these processes and retry removing the pool?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="killProcessesButton">Kill Processes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Protected drives section -->
@if (Model.ProtectedDrives.Any())
{
    <h3>Protected Drives</h3>
    @foreach (var Drive in Model.ProtectedDrives)
    {
        @await Html.PartialAsync("_ProtectedDriveCard", Drive)
    }
    <hr />
}

<script src="/js/_Toast.js"></script>
<script src="/js/Drive.js"></script>
<link rel="stylesheet" href="/css/Drive.css">
