@page
@model Backy.Pages.DriveModel
@{
    ViewData["Title"] = "Drive Catalog";
}

<h1>@ViewData["Title"]</h1>

<div class="container">
    <div class="row">

        <div id="loading-spinner" class="spinner-overlay" style="display: none;">
            <div class="spinner-border text-warning" role="status"></div>
        </div>

        @foreach (var drive in Model.Drives)
        {
            var backgroundColor = drive.BackupDestEnabled ? "#0d6efd" : (drive.IsConnected ? "#198754" : "#555555");
            var usedPercentage = drive.PartitionSize > 0 ? (drive.UsedSpace * 100) / drive.PartitionSize : 0;
            var isConnected = drive.IsConnected ? "Connected" : "Disconnected";

            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card" style="width:500px;">
                    <div class="card-header d-flex justify-content-between align-items-center"
                        style="background-color:@backgroundColor; color:white;">
                        <span>@(string.IsNullOrEmpty(drive.Label) ? "Unnamed Drive" : drive.Label)</span>
                        <span id="total-size-@drive.UUID"></span>
                        <span>@isConnected</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col"><strong>Vendor:</strong> @drive.Vendor</div>
                        </div>
                        <div class="row">
                            <div class="col"><strong>Model:</strong> @drive.Model</div>
                        </div>
                        <div class="row">
                            <div class="col"><strong>Serial:</strong> @drive.Serial</div>
                        </div>
                        <div class="row">
                            <div class="col"><strong>UUID:</strong> @drive.UUID</div>
                        </div>

                        <div class="row mt-3">
                            <div class="col">
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar" style="width: @usedPercentage%"
                                        aria-valuenow="@usedPercentage" aria-valuemin="0" aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col text-muted">
                                <span id="used-size-@drive.UUID"></span> / <span id="total-size-@drive.UUID-bottom"></span>
                            </div>
                        </div>

                        <!-- Button Group -->
                        <div class="btn-group mt-3" role="group" aria-label="Drive actions">
                            <!-- Activate/Disable button -->
                            <button type="button" class="btn btn-primary"
                                onclick="submitForm('ToggleBackupDest', '@drive.UUID')">
                                @(drive.BackupDestEnabled ? "Disable" : "Activate") Backup
                            </button>

                            <!-- Rename button (opens modal) -->
                            <button type="button" class="btn btn-secondary" data-bs-toggle="modal"
                                data-bs-target="#renameModal-@drive.UUID">
                                @(string.IsNullOrEmpty(drive.Label) ? "Add Label" : "Rename")
                            </button>

                            <!-- Remove button (disabled when drive is connected) -->
                            <button type="button" class="btn btn-danger" @(drive.IsConnected ? "disabled" : "")
                                onclick="submitForm('RemoveDrive', '@drive.UUID')">
                                Remove
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal for renaming drive label -->
            <div class="modal fade" id="renameModal-@drive.UUID" tabindex="-1" aria-labelledby="renameModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="renameModalLabel">Rename Drive Label</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form method="post" asp-page-handler="RenameDriveLabel" asp-route-uuid="@drive.UUID">
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="driveLabelInput" class="form-label">New Label</label>
                                    <input type="text" class="form-control" id="driveLabelInput" name="newLabel"
                                        placeholder="Enter new label" value="@drive.Label" />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="/js/Index.js"></script>

<script>
    // Iterate over the drives to call formatSize for used and total sizes
    @foreach (var drive in Model.Drives)
    {
        <text>
                document.getElementById('used-size-@drive.UUID').textContent = formatSize(@drive.UsedSpace);
                document.getElementById('total-size-@drive.UUID').textContent = formatSize(@drive.PartitionSize);
                document.getElementById('total-size-@drive.UUID-bottom').textContent = formatSize(@drive.PartitionSize);
        </text>
    }

        // Refresh page every 5 minutes (300,000 ms)
        setInterval(() => {
            location.reload();
        }, 300000);
</script>
