@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<div class="modal fade @(Visible ? "show d-block" : "d-none")" tabindex="-1" role="dialog" aria-labelledby="modalTitle"
    aria-hidden="true" @onclick="OnBackgroundClick">
    <div class="modal-dialog @ModalSize" role="document" @onclick:stopPropagation="true">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">@Title</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            @if (ShowFooter)
            {
                <div class="modal-footer">
                    @FooterContent
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter, EditorRequired]
    public RenderFragment ChildContent { get; set; } = default!;

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public RenderFragment? FooterContent { get; set; }

    [Parameter]
    public bool ShowFooter { get; set; } = true;

    [Parameter]
    public string ModalSize { get; set; } = ""; // e.g., "modal-lg", "modal-sm"

    private void Close()
    {
        Visible = false;
        VisibleChanged.InvokeAsync(false);
    }

    private void OnBackgroundClick(MouseEventArgs e)
    {
        // Close the modal when clicking outside the modal content
        Close();
    }
}
