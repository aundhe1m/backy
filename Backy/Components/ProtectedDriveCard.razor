@using Backy.Models
@using Microsoft.AspNetCore.Components

<div class="card drive-card protected-drive-card mb-3">
    <!-- Card Header -->
    <div class="card-header d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <img src="/icons/shield-lock.svg" alt="Protected Drive Icon" style="height: 24px; margin-right: 8px;" />
            <span>@(string.IsNullOrEmpty(Model.Name) ? "Unnamed Drive" : Model.Name)</span>
        </div>
        <button class="btn btn-link p-0 me-2 chevron-button" @onclick="ToggleDetails">
            <img src="/icons/chevron-down.svg" alt="Expand Details"
                class="chevron-icon @(IsProtectedDriveDetailsVisible ? "rotated" : "")" style="height: 24px;" />
        </button>
        <!-- Unprotect Button -->
        <button type="button" class="btn btn-transparent unprotect-drive-button"
            @onclick="() => UnprotectDrive(Model.Serial)" title="Remove Protection">
            <img src="/icons/shield-slash.svg" alt="Unprotect Drive" style="height: 24px;" />
        </button>
    </div>
    <!-- Drive Details -->
    @if (IsProtectedDriveDetailsVisible)
    {
        <div class="card-body">
            <!-- Drive Details Table -->
            <div class="table-responsive">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <th>Vendor</th>
                            <td>@Model.Vendor</td>
                        </tr>
                        <tr>
                            <th>Model</th>
                            <td>@Model.Model</td>
                        </tr>
                        <tr>
                            <th>Serial</th>
                            <td>@Model.Serial</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public ProtectedDrive Model { get; set; } = default!;

    private bool IsProtectedDriveDetailsVisible { get; set; } = false;

    [Parameter]
    public EventCallback<string> OnUnprotect { get; set; }

    private void ToggleDetails()
    {
        IsProtectedDriveDetailsVisible = !IsProtectedDriveDetailsVisible;
    }

    private async Task UnprotectDrive(string serial)
    {
        await OnUnprotect.InvokeAsync(serial);
    }
}