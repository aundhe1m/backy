@using Backy.Models
@inject IDataProtectionProvider DataProtectionProvider
@inject ILogger<RemoteModalPathSelection> Logger
@inject ToastService ToastService

<Modal @ref="pathSelectionModal" Size="ModalSize.Large" Title="Select Remote Path" OnClosed="OnModalClosed">
    <BodyTemplate>
        <RemoteFormPathSelection @ref="pathSelectionForm" RemoteConnectionModel="RemoteConnectionModel" />
    </BodyTemplate>
    <FooterTemplate>
        <button class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
        <button class="btn btn-primary" @onclick="Save">Save</button>
    </FooterTemplate>
</Modal>

@code {
    [Parameter]
    public RemoteConnection RemoteConnectionModel { get; set; } = default!;

    [Parameter]
    public EventCallback OnSaved { get; set; }

    private Modal pathSelectionModal = default!;
    private RemoteFormPathSelection? pathSelectionForm;

    public async Task ShowAsync()
    {
        await pathSelectionModal.ShowAsync();
    }

    private async Task CloseModal()
    {
        await pathSelectionModal.HideAsync();
    }

    private async Task Save()
    {
        if (pathSelectionForm != null)
        {
            bool isValid = await pathSelectionForm.ValidateFormAsync();
            if (isValid)
            {
                await OnSaved.InvokeAsync();
                await CloseModal();
            }
        }
    }

    private async Task OnModalClosed()
    {
        if (pathSelectionForm != null)
        {
            await pathSelectionForm.DisposeAsync();
        }
    }
}
