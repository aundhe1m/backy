@page
@model BackyBack.Pages.IndexModel
@{
    ViewData["Title"] = "Drive Information";
}

<div class="container">
    <h1 class="display-4 text-center my-5">Drive Information</h1>

    <div id="loading-spinner" class="spinner-overlay" style="display: none;">
        <div class="spinner-border text-warning" role="status"></div>
    </div>

    @if (Model.Drives.Count == 0)
    {
        <div class="alert alert-warning text-center">
            No drives found.
        </div>
    }
    else
    {
        <script>
            // Function to format sizes in bytes to readable formats
            function formatSize(sizeInBytes) {
                if (sizeInBytes === null || sizeInBytes === 0) return 'Unknown size';

                let size = sizeInBytes;
                const suffixes = ['B', 'KB', 'MB', 'GB', 'TB'];
                let suffixIndex = 0;

                while (size >= 1024 && suffixIndex < suffixes.length - 1) {
                    size /= 1024;
                    suffixIndex++;
                }

                return size.toFixed(2) + ' ' + suffixes[suffixIndex];
            }

            function showLoading() {
                const spinner = document.getElementById("loading-spinner");
                spinner.style.display = "flex";
                spinner.style.opacity = "1";  // Fade in
            }

            function hideLoading() {
                const spinner = document.getElementById("loading-spinner");
                spinner.style.opacity = "0";  // Fade out
                setTimeout(() => { spinner.style.display = "none"; }, 20);  // Hide after fade out
            }

            // Function to intercept form submission and handle sizes
            document.addEventListener('DOMContentLoaded', function () {
                // Handle form submission interception
                document.querySelectorAll("form").forEach(form => {
                    form.addEventListener("submit", function (e) {
                        e.preventDefault(); // Prevent default form submission
                        showLoading(); // Show spinner

                        const formData = new FormData(form);
                        const action = form.getAttribute("action");
                        const method = form.getAttribute("method");

                        fetch(action, {
                            method: method,
                            body: new URLSearchParams(formData),
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('HTTP error! Status: ' + response.status);
                            }
                            return response.json();
                        })
                        .then(data => {
                            hideLoading(); // Hide spinner
                            if (data.success) {
                                console.log(data.message);
                                // Dynamically update the UI if needed or just reload
                                location.reload(); // Reload to update the UI
                            } else {
                                throw new Error('Task failed');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            hideLoading();
                        });
                    });
                });

                // Handle dynamic size updates for drives and partitions
                @foreach (var drive in Model.Drives)
                {
                    <text>
                        document.getElementById("drive-size-@drive.Name").innerText = formatSize(@drive.Size);
                    </text>

                    @foreach (var partition in drive.Partitions)
                    {
                        <text>
                            document.getElementById("partition-size-@partition.Name").innerText = formatSize(@partition.Size);
                        </text>
                    }
                }
            });
        </script>

        @foreach (var drive in Model.Drives)
        {
            <div class="card mb-3 shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4>
                        <i class="fas fa-hdd"></i> @drive.Name
                        <span class="badge badge-secondary text-dark" id="drive-size-@drive.Name"></span>
                    </h4>
                    <small class="text-muted">Serial: @drive.Serial | Vendor: @drive.Vendor | Model: @drive.Model</small>
                </div>
                <div class="card-body">
                    <div class="text-right mb-2">
                        <form method="post" asp-page-handler="CreatePartition" asp-route-driveName="@drive.Name">
                            <button type="submit" class="btn btn-outline-primary">Create Partition</button>
                        </form>
                    </div>

                    @if (drive.Partitions.Count > 0)
                    {
                        @foreach (var partition in drive.Partitions)
                        {
                            <div class="card mt-3">
                                <div class="card-header d-flex justify-content-between align-items-center"
                                    style="background-color: #0d6efd; color: white;">
                                    Partition: @partition.Name
                                    <span class="text" style="color: white;">Label: (Feature to be added later)</span>
                                </div>
                                <div class="card-body">
                                    <div class="row mt-2 align-items-center">
                                        <div class="col-md-6">
                                            <strong>Mountpoint:</strong> @partition.MountPoint
                                        </div>
                                        <div class="col-md-6 d-flex justify-content-end">
                                            <form method="post"
                                                asp-page-handler="@(partition.MountPoint == "Not Mounted" ? "MountPartition" : "UnmountPartition")"
                                                asp-route-partitionName="@partition.Name" asp-route-uuid="@partition.UUID">
                                                <button type="submit" class="btn btn-outline-success btn-sm action-btn mx-2">
                                                    @(partition.MountPoint == "Not Mounted" ? "Mount" : "Unmount")
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="row mt-2 align-items-center">
                                        <div class="col-md-6">
                                            <strong>UUID:</strong> @partition.UUID
                                        </div>
                                        <div class="col-md-6 d-flex justify-content-end">
                                            <form method="post" asp-page-handler="FormatPartition"
                                                asp-route-partitionName="@partition.Name">
                                                <button type="submit" class="btn btn-outline-secondary btn-sm action-btn mx-2">Format</button>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="row mt-2 align-items-center">
                                        <div class="col-md-6">
                                            <strong>Filesystem:</strong> @partition.Fstype
                                        </div>
                                        <div class="col-md-6 d-flex justify-content-end">
                                            <form method="post" asp-page-handler="RemovePartition"
                                                asp-route-partitionName="@partition.Name">
                                                <button type="submit" class="btn btn-outline-danger btn-sm action-btn mx-2">Remove</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    }
</div>

<style>
    .action-btn {
        width: 150px; /* Ensures all buttons are the same width */
    }

    .spinner-overlay {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        /* Center in viewport */
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: opacity 0.02s ease-in-out;
        /* 20ms fade in/out */
    }

    .spinner-border {
        width: 5rem;
        height: 5rem;
        color: rgb(177, 115, 1);
        /* Make spinner orange */
    }
</style>
